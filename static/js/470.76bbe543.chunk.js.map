{"version":3,"file":"static/js/470.76bbe543.chunk.js","mappings":"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","sources":["components/PhonebookList/ContactsItem.jsx","components/PhonebookList/visibleContactsMap.js","components/PhonebookList/PhonebookList.jsx","webpack://react-homework-template/./src/components/PhonebookForm/PhonebookForm.module.scss?5840","components/PhonebookForm/PhonebookForm.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.scss?ce6f","pages/Home/index.jsx","store/selectors.js","webpack://react-homework-template/./src/components/PhonebookList/PhonebookList.module.scss?ce93"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from 'store/contactsSlice';\n\nconst ContactsItem = ({ contact: { id, name, phone } }) => {\n  const dispatch = useDispatch();\n  const deleteContact = () => dispatch(deleteContactThunk(id));\n\n  return (\n    <li>\n      <span>\n        {name}: {phone}\n      </span>\n      <button onClick={deleteContact}>Delete</button>\n    </li>\n  );\n};\n\nexport default ContactsItem;\n","import ContactsItem from 'components/PhonebookList/ContactsItem';\n\nconst visibleContactsMap = (visibleContacts, recent = false) => {\n  if (recent) {\n    const sliceLength = visibleContacts.length - 5;\n    const recentContacts = visibleContacts.slice(sliceLength);\n    return recentContacts.map(contact => {\n      return <ContactsItem contact={contact} key={contact.id} />;\n    });\n  }\n  return visibleContacts.map(contact => {\n    return <ContactsItem contact={contact} key={contact.id} />;\n  });\n};\n\nexport default visibleContactsMap;\n","import { useSelector } from 'react-redux';\nimport {\n  selectErrorContacts,\n  selectFilter,\n  selectIsLoadingContacts,\n  selectVisibleContacts,\n} from 'store/selectors';\nimport styles from './PhonebookList.module.scss';\nimport visibleContactsMap from './visibleContactsMap';\n\nexport const PhonebookList = ({ recent = false }) => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoadingContacts);\n  const error = useSelector(selectErrorContacts);\n  return (\n    <>\n      {recent && !filter && <h2>Recent contacts</h2>}\n      <ul className={styles.contactsList}>\n        {isLoading ? (\n          <p>Loading...</p>\n        ) : error ? (\n          <p>{error}</p>\n        ) : filter ? (\n          visibleContactsMap(visibleContacts)\n        ) : (\n          visibleContactsMap(visibleContacts, recent)\n        )}\n      </ul>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsForm\":\"PhonebookForm_contactsForm__1hcL0\"};","import { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { selectContacts } from 'store/selectors';\nimport { addContactThunk } from 'store/contactsSlice';\nimport styles from './PhonebookForm.module.scss';\n\nconst PhonebookForm = () => {\n  const { contacts } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const createContact = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.name.value;\n    const phone = form.number.value;\n    const phoneClear = phone.replace(/[\\s-]+/g, '');\n\n    if (phoneClear.length >= 15)\n      return Notiflix.Notify.warning(`Phone number is too big!`);\n\n    const isNew = contacts.every(el => {\n      if (el.phone === phone) return false;\n      return true;\n    });\n\n    if (!isNew)\n      return Notiflix.Notify.warning(\n        `This phone number is already in contacts!`\n      );\n\n    const isNumber = Number(phoneClear);\n    if (!isNumber) return Notiflix.Notify.warning(`Enter correct number!`);\n\n    form.reset();\n\n    const newContact = {\n      name,\n      phone,\n    };\n\n    dispatch(addContactThunk(newContact));\n  };\n\n  return (\n    <form className={styles.contactsForm} onSubmit={createContact}>\n      <label htmlFor=\"name\">Name</label>\n      <input type=\"text\" name=\"name\" id=\"name\" required autoComplete=\"name\" />\n      <label htmlFor=\"number\">Number</label>\n      <input type=\"tel\" name=\"number\" id=\"number\" required autoComplete=\"tel\" />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default PhonebookForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"homeContainer\":\"Home_homeContainer__Gr0Me\",\"formContainer\":\"Home_formContainer__HvDrM\",\"contactsContainer\":\"Home_contactsContainer__UeE3m\"};","import PhonebookForm from 'components/PhonebookForm/PhonebookForm';\nimport { PhonebookList } from 'components/PhonebookList/PhonebookList';\nimport { useDispatch } from 'react-redux';\nimport { changeFilterAction } from 'store/filterSlice';\nimport styles from './Home.module.scss';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  dispatch(changeFilterAction(''));\n\n  return (\n    <div className={styles.homeContainer}>\n      <div className={styles.formContainer}>\n        <h2>Add Contact</h2>\n        <PhonebookForm />\n      </div>\n      <div className={styles.contactsContainer}>\n        <PhonebookList recent />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectFilter = state => state.filter;\n\nconst selectContacts = state => state.contacts;\n\nconst selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  ({ contacts }, filter) =>\n    contacts.filter(({ name, phone }) => {\n      if (filter) {\n        return (\n          name.toLowerCase().includes(filter.toLowerCase()) ||\n          phone.includes(filter)\n        );\n      }\n      return true;\n    })\n);\n\nconst selectIsLoadingContacts = state => state.contacts.isLoading;\n\nconst selectErrorContacts = state => state.contacts.error;\n\nexport {\n  selectFilter,\n  selectContacts,\n  selectVisibleContacts,\n  selectErrorContacts,\n  selectIsLoadingContacts,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterForm\":\"PhonebookList_filterForm__LrWaI\",\"contactsList\":\"PhonebookList_contactsList__mkSCJ\"};"],"names":["_ref","contact","id","name","phone","dispatch","useDispatch","_jsxs","children","_jsx","onClick","deleteContact","deleteContactThunk","visibleContacts","recent","arguments","length","undefined","sliceLength","slice","map","ContactsItem","PhonebookList","useSelector","selectVisibleContacts","filter","selectFilter","isLoading","selectIsLoadingContacts","error","selectErrorContacts","_Fragment","className","styles","visibleContactsMap","PhonebookForm","contacts","selectContacts","onSubmit","e","preventDefault","form","target","value","number","phoneClear","replace","Notiflix","every","el","Number","reset","newContact","addContactThunk","htmlFor","type","required","autoComplete","Home","changeFilterAction","state","createSelector","_ref2","toLowerCase","includes"],"sourceRoot":""}