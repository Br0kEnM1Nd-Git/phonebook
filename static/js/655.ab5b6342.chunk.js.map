{"version":3,"file":"static/js/655.ab5b6342.chunk.js","mappings":"kMAGA,MAcA,EAdqBA,IAAuC,IAApCC,SAAS,GAAEC,EAAE,KAAEC,EAAI,MAAEC,IAASJ,EACpD,MAAMK,GAAWC,EAAAA,EAAAA,MAGjB,OACEC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CACGL,EAAK,KAAGC,MAEXK,EAAAA,EAAAA,KAAA,UAAQC,QAPUC,IAAMN,GAASO,EAAAA,EAAAA,IAAmBV,IAOrBM,SAAC,aAC7B,ECET,EAb2B,SAACK,GAAqC,IAApBC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACjD,GAAID,EAAQ,CACV,MAAMI,EAAcL,EAAgBG,OAAS,EAE7C,OADuBH,EAAgBM,MAAMD,GACvBE,KAAInB,IACjBQ,EAAAA,EAAAA,KAACY,EAAY,CAACpB,QAASA,GAAcA,EAAQC,KAExD,CACA,OAAOW,EAAgBO,KAAInB,IAClBQ,EAAAA,EAAAA,KAACY,EAAY,CAACpB,QAASA,GAAcA,EAAQC,KAExD,ECHaoB,EAAgBtB,IAAyB,IAAxB,OAAEc,GAAS,GAAOd,EAC9C,MAAMa,GAAkBU,EAAAA,EAAAA,IAAYC,EAAAA,IAC9BC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IACrBC,GAAYJ,EAAAA,EAAAA,IAAYK,EAAAA,IACxBC,GAAQN,EAAAA,EAAAA,IAAYO,EAAAA,IAC1B,OACErB,EAAAA,EAAAA,KAAA,MAAIsB,UAAWC,EAAAA,EAAAA,aAAoBxB,SAChCmB,GACClB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACDqB,GACFpB,EAAAA,EAAAA,KAAA,KAAAD,SAAIqB,IACFJ,EACFQ,EAAmBpB,GAEnBoB,EAAmBpB,EAAiBC,IAEnC,C,sFCtBT,MAUA,EAViBoB,MACE5B,EAAAA,EAAAA,KACjBD,EAAS8B,EAAAA,EAAAA,GAAmB,MAE1B1B,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACa,EAAAA,EAAa,M,mFCPpB,MAAMI,EAAeU,GAASA,EAAMX,OAE9BY,EAAiBD,GAASA,EAAME,SAEhCd,GAAwBe,EAAAA,EAAAA,IAC5B,CAACF,EAAgBX,IACjB,CAAA1B,EAAeyB,KAAM,IAApB,SAAEa,GAAUtC,EAAA,OACXsC,EAASb,QAAOe,IAAsB,IAArB,KAAErC,EAAI,MAAEC,GAAOoC,EAC9B,OAAIf,IAEAtB,EAAKsC,cAAcC,SAASjB,EAAOgB,gBACnCrC,EAAMsC,SAASjB,GAGR,GACX,IAGAG,EAA0BQ,GAASA,EAAME,SAASX,UAElDG,EAAsBM,GAASA,EAAME,SAAST,K,iCCrBpD,SAAgB,WAAa,8BAA8B,aAAe,gC","sources":["components/PhonebookList/ContactsItem.jsx","components/PhonebookList/visibleContactsMap.js","components/PhonebookList/PhonebookList.jsx","pages/Contacts/index.jsx","store/selectors.js","webpack://react-homework-template/./src/components/PhonebookList/Phonebook.module.scss?2088"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from 'store/contactsSlice';\n\nconst ContactsItem = ({ contact: { id, name, phone } }) => {\n  const dispatch = useDispatch();\n  const deleteContact = () => dispatch(deleteContactThunk(id));\n\n  return (\n    <li>\n      <span>\n        {name}: {phone}\n      </span>\n      <button onClick={deleteContact}>Delete</button>\n    </li>\n  );\n};\n\nexport default ContactsItem;\n","import ContactsItem from 'components/PhonebookList/ContactsItem';\n\nconst visibleContactsMap = (visibleContacts, recent = false) => {\n  if (recent) {\n    const sliceLength = visibleContacts.length - 5;\n    const recentContacts = visibleContacts.slice(sliceLength);\n    return recentContacts.map(contact => {\n      return <ContactsItem contact={contact} key={contact.id} />;\n    });\n  }\n  return visibleContacts.map(contact => {\n    return <ContactsItem contact={contact} key={contact.id} />;\n  });\n};\n\nexport default visibleContactsMap;\n","import { useSelector } from 'react-redux';\nimport {\n  selectErrorContacts,\n  selectFilter,\n  selectIsLoadingContacts,\n  selectVisibleContacts,\n} from 'store/selectors';\nimport styles from './Phonebook.module.scss';\nimport visibleContactsMap from './visibleContactsMap';\n\nexport const PhonebookList = ({ recent = false }) => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoadingContacts);\n  const error = useSelector(selectErrorContacts);\n  return (\n    <ul className={styles.contactsList}>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : filter ? (\n        visibleContactsMap(visibleContacts)\n      ) : (\n        visibleContactsMap(visibleContacts, recent)\n      )}\n    </ul>\n  );\n};\n","import { PhonebookList } from 'components/PhonebookList/PhonebookList';\nimport { useDispatch } from 'react-redux';\nimport { changeFilterAction } from 'store/filterSlice';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  dispatch(changeFilterAction(''));\n  return (\n    <div>\n      <PhonebookList />\n    </div>\n  );\n};\n\nexport default Contacts;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectFilter = state => state.filter;\n\nconst selectContacts = state => state.contacts;\n\nconst selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  ({ contacts }, filter) =>\n    contacts.filter(({ name, phone }) => {\n      if (filter) {\n        return (\n          name.toLowerCase().includes(filter.toLowerCase()) ||\n          phone.includes(filter)\n        );\n      }\n      return true;\n    })\n);\n\nconst selectIsLoadingContacts = state => state.contacts.isLoading;\n\nconst selectErrorContacts = state => state.contacts.error;\n\nexport {\n  selectFilter,\n  selectContacts,\n  selectVisibleContacts,\n  selectErrorContacts,\n  selectIsLoadingContacts,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterForm\":\"Phonebook_filterForm__X+vXc\",\"contactsList\":\"Phonebook_contactsList__CiGrI\"};"],"names":["_ref","contact","id","name","phone","dispatch","useDispatch","_jsxs","children","_jsx","onClick","deleteContact","deleteContactThunk","visibleContacts","recent","arguments","length","undefined","sliceLength","slice","map","ContactsItem","PhonebookList","useSelector","selectVisibleContacts","filter","selectFilter","isLoading","selectIsLoadingContacts","error","selectErrorContacts","className","styles","visibleContactsMap","Contacts","changeFilterAction","state","selectContacts","contacts","createSelector","_ref2","toLowerCase","includes"],"sourceRoot":""}